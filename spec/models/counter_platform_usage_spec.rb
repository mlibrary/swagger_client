=begin
#COUNTER_SUSHI5_0 API

#The COUNTER_SUSHI5_0 API represents a RESTful implementation of SUSHI automation intended to return COUNTER Release 5 reports and snippets of COUNTER usage in JSON format

OpenAPI spec version: 1.0.0
Contact: nisohq@niso.org
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 1.0.16

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::COUNTERPlatformUsage
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'COUNTERPlatformUsage' do
  before do
    # run before each test
    @instance = SwaggerClient::COUNTERPlatformUsage.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of COUNTERPlatformUsage' do
    it 'should create an instance of COUNTERPlatformUsage' do
      expect(@instance).to be_instance_of(SwaggerClient::COUNTERPlatformUsage)
    end
  end
  describe 'test attribute "platform"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "data_type"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Article", "Book", "Book Segment", "Collection", "Database", "Dataset", "Journal", "Multimedia", "Platform", "Repository Item"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.data_type = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "yop"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "access_type"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Controlled", "OA_Gold", "Other_Free_To_Read"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.access_type = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "access_method"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Regular", "TDM"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.access_method = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "performance"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

